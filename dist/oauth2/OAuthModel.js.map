{"version":3,"sources":["../../src/oauth2/OAuthModel.js"],"names":["InMemoryCache","clients","clientId","clientSecret","redirectUris","grants","tokens","users","id","username","password","console","log","bearerToken","filter","token","accessToken","length","refreshToken","client","user","tokenData","accessTokenExpiresAt","refreshTokenExpiresAt","userId","push"],"mappings":";;;;;;;;;;AACA;;;;IAIMA,a;AACJ,2BAAa;AAAA;;AACX,SAAKC,OAAL,GAAe,CAAC,EAAEC,UAAW,MAAb,EAAqBC,cAAe,YAApC,EAAkDC,cAAe,CAAC,EAAD,CAAjE,EAAuEC,QAAQ,CAAC,UAAD,CAA/E,EAAD,CAAf;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa,CAAC,EAAEC,IAAK,KAAP,EAAcC,UAAU,YAAxB,EAAsCC,UAAU,YAAhD,EAAD,CAAb;AACD;;AAEH;;;;;;2BAIS;AACLC,cAAQC,GAAR,CAAY,SAAZ,EAAuB,KAAKX,OAA5B;AACAU,cAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKN,MAA3B;AACAK,cAAQC,GAAR,CAAY,OAAZ,EAAqB,KAAKL,KAA1B;AACD;;;mCAEcM,W,EAAa;AAC1B,UAAIP,SAAS,KAAKA,MAAL,CAAYQ,MAAZ,CAAmB,UAASC,KAAT,EAAgB;AAC9C,eAAOA,MAAMC,WAAN,KAAsBH,WAA7B;AACD,OAFY,CAAb;;AAIA,aAAOP,OAAOW,MAAP,GAAgBX,OAAO,CAAP,CAAhB,GAA4B,KAAnC;AACD;;;oCAEeO,W,EAAa;AAC3B,UAAIP,SAAS,KAAKA,MAAL,CAAYQ,MAAZ,CAAmB,UAASC,KAAT,EAAgB;AAC9C,eAAOA,MAAMG,YAAN,KAAuBL,WAA9B;AACD,OAFY,CAAb;;AAIA,aAAOP,OAAOW,MAAP,GAAgBX,OAAO,CAAP,CAAhB,GAA4B,KAAnC;AACD;;;8BAESJ,Q,EAAUC,Y,EAAc;AAChC,UAAIF,UAAU,KAAKA,OAAL,CAAaa,MAAb,CAAoB,UAASK,MAAT,EAAiB;AACjD,eAAOA,OAAOjB,QAAP,KAAoBA,QAApB,IAAgCiB,OAAOhB,YAAP,KAAwBA,YAA/D;AACD,OAFa,CAAd;;AAIA,aAAOF,QAAQgB,MAAR,GAAiBhB,QAAQ,CAAR,CAAjB,GAA8B,KAArC;AACD;;;8BAESc,K,EAAOI,M,EAAQC,I,EAAM;AAC7B,UAAIC,YAAY;AACdL,qBAAaD,MAAMC,WADL;AAEdM,8BAAsBP,MAAMO,oBAFd;AAGdpB,kBAAUiB,OAAOjB,QAHH;AAIdiB,gBAAQA,MAJM;AAKdD,sBAAcH,MAAMG,YALN;AAMdK,+BAAuBR,MAAMQ,qBANf;AAOdC,gBAAQJ,KAAKZ,EAPC;AAQdY,cAAMA;AARQ,OAAhB;AAUA,WAAKd,MAAL,CAAYmB,IAAZ,CAAiBJ,SAAjB;AACA,aAAOA,SAAP;AACD;;;4BAEOZ,Q,EAAUC,Q,EAAU;AAC1B,UAAIH,QAAQ,KAAKA,KAAL,CAAWO,MAAX,CAAkB,UAASM,IAAT,EAAe;AAC3C,eAAOA,KAAKX,QAAL,KAAkBA,QAAlB,IAA8BW,KAAKV,QAAL,KAAkBA,QAAvD;AACD,OAFW,CAAZ;;AAIA,aAAOH,MAAMU,MAAN,GAAeV,MAAM,CAAN,CAAf,GAA0B,KAAjC;AACD;;;;;;kBAEYP,a","file":"OAuthModel.js","sourcesContent":["\r\n/**\r\n * Constructor.\r\n */\r\n\r\nclass InMemoryCache {\r\n  constructor(){\r\n    this.clients = [{ clientId : 'thom', clientSecret : 'nightworld', redirectUris : [''], grants: ['password'] }];\r\n    this.tokens = [];\r\n    this.users = [{ id : '123', username: 'thomseddon', password: 'nightworld' }];\r\n  }\r\n\r\n/**\r\n * Dump the cache.\r\n */\r\n\r\n  dump() {\r\n    console.log('clients', this.clients);\r\n    console.log('tokens', this.tokens);\r\n    console.log('users', this.users);\r\n  }\r\n\r\n  getAccessToken(bearerToken) {\r\n    var tokens = this.tokens.filter(function(token) {\r\n      return token.accessToken === bearerToken;\r\n    });\r\n\r\n    return tokens.length ? tokens[0] : false;\r\n  }\r\n\r\n  getRefreshToken(bearerToken) {\r\n    var tokens = this.tokens.filter(function(token) {\r\n      return token.refreshToken === bearerToken;\r\n    });\r\n\r\n    return tokens.length ? tokens[0] : false;\r\n  }\r\n\r\n  getClient(clientId, clientSecret) {\r\n    var clients = this.clients.filter(function(client) {\r\n      return client.clientId === clientId && client.clientSecret === clientSecret;\r\n    });\r\n\r\n    return clients.length ? clients[0] : false;\r\n  }\r\n\r\n  saveToken(token, client, user) {\r\n    let tokenData = {\r\n      accessToken: token.accessToken,\r\n      accessTokenExpiresAt: token.accessTokenExpiresAt,\r\n      clientId: client.clientId,\r\n      client: client,\r\n      refreshToken: token.refreshToken,\r\n      refreshTokenExpiresAt: token.refreshTokenExpiresAt,\r\n      userId: user.id,\r\n      user: user\r\n    };\r\n    this.tokens.push(tokenData);\r\n    return tokenData;\r\n  }\r\n\r\n  getUser(username, password) {\r\n    var users = this.users.filter(function(user) {\r\n      return user.username === username && user.password === password;\r\n    });\r\n\r\n    return users.length ? users[0] : false;\r\n  }\r\n}\r\nexport default InMemoryCache;"]}