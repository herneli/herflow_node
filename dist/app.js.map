{"version":3,"sources":["../src/app.js"],"names":["app","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","usersRouter","req","res","next","err","locals","message","error","get","status","render"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAD,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAP,IAAIK,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAJ,IAAIK,GAAJ,CAAQ,GAAR,EAAaM,eAAb;AACAX,IAAIK,GAAJ,CAAQ,QAAR,EAAkBO,eAAlB;;AAEA;AACAZ,IAAIK,GAAJ,CAAQ,UAASQ,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAf,IAAIK,GAAJ,CAAQ,UAASW,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIb,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA;kBACetB,G","file":"app.js","sourcesContent":["import createError from 'http-errors'\nimport express from 'express'\nimport path from 'path'\nimport cookieParser from 'cookie-parser'\nimport logger from 'morgan'\n\nimport indexRouter  from './routes/index';\nimport usersRouter from './routes/users';\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n// module.exports = app;\nexport default app;\n"]}