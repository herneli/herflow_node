{"version":3,"sources":["../src/app.js"],"names":["app","oauth","OAuthServer","model","OAuthModel","requireClientAuthentication","password","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","bodyParser","post","token","req","res","next","err","locals","message","error","get","status","render"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEAA,IAAIC,KAAJ,GAAY,IAAIC,4BAAJ,CAAgB;AAC1BC,SAAO,IAAIC,oBAAJ,EADmB,EACD;AACzBC,+BAA6B,EAAEC,UAAU,KAAZ;AAFH,CAAhB,CAAZ;;AAKA;AACAN,IAAIO,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAV,IAAIO,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAP,IAAIW,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAX,IAAIW,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAb,IAAIW,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAf,IAAIW,GAAJ,CAAQ,6BAAR;AACAX,IAAIW,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAV,IAAIW,GAAJ,CAAQ,GAAR,EAAaM,eAAb;;AAEAjB,IAAIW,GAAJ,CAAQO,qBAAWL,IAAX,EAAR;AACAb,IAAIW,GAAJ,CAAQO,qBAAWJ,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEAf,IAAImB,IAAJ,CAAS,cAAT,EAAyBnB,IAAIC,KAAJ,CAAUmB,KAAV,EAAzB;;AAEA;AACA;;AAEA;AACApB,IAAIW,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAvB,IAAIW,GAAJ,CAAQ,UAASa,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIrB,GAAJ,CAAQ4B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA;kBACe9B,G","file":"app.js","sourcesContent":["import createError from \"http-errors\";\nimport express from \"express\";\nimport path from \"path\";\nimport cookieParser from \"cookie-parser\";\nimport bodyParser from \"body-parser\";\nimport logger from \"morgan\";\nimport OAuthServer from \"express-oauth-server\";\nimport OAuthModel from \"./oauth2/OAuthModel\";\n\nimport indexRouter from \"./routes/index\";\n\nvar app = express();\n\napp.oauth = new OAuthServer({\n  model: new OAuthModel(), // See https://github.com/oauthjs/node-oauth2-server for specification\n  requireClientAuthentication: { password: false }\n});\n\n// view engine setup\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"ejs\");\n\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, \"public\")));\n\napp.use(\"/\", indexRouter);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.post(\"/oauth/token\", app.oauth.token());\n\n// // Enter the secure area\n// app.use(app.oauth.authorize());\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\n\n// module.exports = app;\nexport default app;\n"]}