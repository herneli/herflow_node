{"version":3,"sources":["../src/app.js"],"names":["app","oauth","OAuthServer","model","OAuthModel","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","bodyParser","post","token","req","res","next","err","locals","message","error","get","status","render"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEAA,IAAIC,KAAJ,GAAY,IAAIC,4BAAJ,CAAgB;AAC1BC,SAAO,IAAIC,oBAAJ,EADmB,CACD;AADC,CAAhB,CAAZ;;AAIA;AACAJ,IAAIK,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAR,IAAIK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAL,IAAIS,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAT,IAAIS,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAX,IAAIS,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAb,IAAIS,GAAJ,CAAQ,6BAAR;AACAT,IAAIS,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAR,IAAIS,GAAJ,CAAQ,GAAR,EAAaM,eAAb;;AAEAf,IAAIS,GAAJ,CAAQO,qBAAWL,IAAX,EAAR;AACAX,IAAIS,GAAJ,CAAQO,qBAAWJ,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEAb,IAAIiB,IAAJ,CAAS,cAAT,EAAyBjB,IAAIC,KAAJ,CAAUiB,KAAV,EAAzB;;AAIA;AACA;;AAEA;AACAlB,IAAIS,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACArB,IAAIS,GAAJ,CAAQ,UAASa,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAInB,GAAJ,CAAQ0B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA;kBACe5B,G","file":"app.js","sourcesContent":["import createError from 'http-errors'\nimport express from 'express'\nimport path from 'path'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport logger from 'morgan'\nimport OAuthServer from 'express-oauth-server'\nimport OAuthModel from './oauth2/OAuthModel'\n\nimport indexRouter  from './routes/index';\n\nvar app = express();\n\napp.oauth = new OAuthServer({\n  model: new OAuthModel(), // See https://github.com/oauthjs/node-oauth2-server for specification\n});\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.post('/oauth/token', app.oauth.token());\n\n\n\n// // Enter the secure area\n// app.use(app.oauth.authorize());\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n// module.exports = app;\nexport default app;\n"]}